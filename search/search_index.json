{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":true,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Csustom Swerve Documentation For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to Csustom Swerve Documentation"},{"location":"#welcome-to-csustom-swerve-documentation","text":"For full documentation visit mkdocs.org .","title":"Welcome to Csustom Swerve Documentation"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Electrical/Intro/","text":"Coming Soon","title":"Intro"},{"location":"Electrical/Intro/#coming-soon","text":"","title":"Coming Soon"},{"location":"Mechanical/Basics/","text":"Mechanical Basics Here are some basic pointers to assembling the frame... Our Frame 63.5 cm X 63.5 cm body Box tube: 2 cm X 4 cm with 0.3175 cm wall thickness SDS MK3 Fast Modules with NEO motors CANCoder (hall-effect) encoders for angle motor Important Wheels should be kept free of threads such as carpet and string. Threads can be caught in the wheels and can slow or even break the swerve components. Frame dimensions A main component of the swerve drive--as seen by existing swerve teams--use a square frame. While a rectangular frame is certainly possible, a square frame is advantageous in many ways. Quick Tips Swerve robots typically are slightly more unstable than tank drive robots. As such, it is crucial that the CG (center of gravity) is as low as possible to prevent a loss of stability while driving. Due to the fast acceleration and erratic movement of swerve robots, essential components should be mounted firmly to a stable object such as the frame. This is even more important in regards to the beattery, due to the danger of having a loose battery and the potential robot deactivation, as such we recomend firmly strapping down the battery and ensuring that it will not slip out on tight turns or collisions. Any electrical components can be firmly mounted with electrical tape to ensure their stability while the robot is running due to the potentially devistating consequinces of having a electrical conponent come loose in a collision. Gearboxes should be greased regularly to ensure optimal functionality, but be careful that you use a propper amount of grease because having too much or too little can damage the gearboxes. The gearbox casing can be 3D printed to ensure that no grime or debris impede the functionality of the gearbox.","title":"Basics"},{"location":"Mechanical/Basics/#mechanical-basics","text":"Here are some basic pointers to assembling the frame...","title":"Mechanical Basics"},{"location":"Mechanical/Basics/#our-frame","text":"63.5 cm X 63.5 cm body Box tube: 2 cm X 4 cm with 0.3175 cm wall thickness SDS MK3 Fast Modules with NEO motors CANCoder (hall-effect) encoders for angle motor Important Wheels should be kept free of threads such as carpet and string. Threads can be caught in the wheels and can slow or even break the swerve components.","title":"Our Frame"},{"location":"Mechanical/Basics/#frame-dimensions","text":"A main component of the swerve drive--as seen by existing swerve teams--use a square frame. While a rectangular frame is certainly possible, a square frame is advantageous in many ways.","title":"Frame dimensions"},{"location":"Mechanical/Basics/#quick-tips","text":"Swerve robots typically are slightly more unstable than tank drive robots. As such, it is crucial that the CG (center of gravity) is as low as possible to prevent a loss of stability while driving. Due to the fast acceleration and erratic movement of swerve robots, essential components should be mounted firmly to a stable object such as the frame. This is even more important in regards to the beattery, due to the danger of having a loose battery and the potential robot deactivation, as such we recomend firmly strapping down the battery and ensuring that it will not slip out on tight turns or collisions. Any electrical components can be firmly mounted with electrical tape to ensure their stability while the robot is running due to the potentially devistating consequinces of having a electrical conponent come loose in a collision. Gearboxes should be greased regularly to ensure optimal functionality, but be careful that you use a propper amount of grease because having too much or too little can damage the gearboxes. The gearbox casing can be 3D printed to ensure that no grime or debris impede the functionality of the gearbox.","title":"Quick Tips"},{"location":"Programming/Intro/","text":"Software Software is an essential part in a robot's success. From autonomous to tele-op, to kinematics and vision, good software is often a major factor in whether your bot performes well or not. Swerve drive kinematics It may seem complicated, but the workings of a swerve bot are relatively simple. Here are the concepts that we're assuming you understand already. If you don't, then please do some brief research. Vectors and vector math (addition + subtraction) Basics of forces (velocity and force) The premise behind a swerve bot Trigonometry (identities and formulas) How to take joystick values (direction and magnitude) The basis behind our kinematics is creating a velocity vector for each wheel. The vector points in the direction of the wheel and the size of the vector indicates the magnitude of the velocity. There are two vectors for each wheel that need to be combined: the strafing vector and the rotation vector. Throughout the code, we keep the vectors in component form for simplicity. The strafing vector When we want to strafe, note that each wheel points in the same direction: Add diagram of strafing wheels with their respective direction Thus, the direction of each wheel just becomes whatever direction the joystick is facing. It's so simple! Unfortunately, it's not that simple. This only works in robot-centric mode, where \"left\" and \"right\" directions are considered from the perspective of the robot. However, with swerve, you often are facing a different direction than the robot and so this becomes an uneccessary hussle. Add diagram of the bot strafing left facing in two different directions (robot-centric) The alternative is to use field-centric driving, which makes it so that \"your left\" is always the \"bot's left\", no matter which direction the robot is facing. To adjust for this, we need to get the angle from our gyroscope and adjust the strafing direction. Add diagram of the bot strafing left facing in two different directions (field-centric) Since we are keeping the vectors in component form, we need to think about this more carefully. Our joystick inputs give us inputs in the X and Y direction, and so we have 3 $$ Let ${J_{x}}$ be the magnitude of the X-direction of the left joystick. Let ${J_{y}}$ be the magnitude of the Y-direction of the left joystick. Let ${G}$ be the relative angle we are currently at. $$","title":"Intro"},{"location":"Programming/Intro/#software","text":"Software is an essential part in a robot's success. From autonomous to tele-op, to kinematics and vision, good software is often a major factor in whether your bot performes well or not.","title":"Software"},{"location":"Programming/Intro/#swerve-drive-kinematics","text":"It may seem complicated, but the workings of a swerve bot are relatively simple. Here are the concepts that we're assuming you understand already. If you don't, then please do some brief research. Vectors and vector math (addition + subtraction) Basics of forces (velocity and force) The premise behind a swerve bot Trigonometry (identities and formulas) How to take joystick values (direction and magnitude) The basis behind our kinematics is creating a velocity vector for each wheel. The vector points in the direction of the wheel and the size of the vector indicates the magnitude of the velocity. There are two vectors for each wheel that need to be combined: the strafing vector and the rotation vector. Throughout the code, we keep the vectors in component form for simplicity.","title":"Swerve drive kinematics"},{"location":"Programming/Intro/#the-strafing-vector","text":"When we want to strafe, note that each wheel points in the same direction: Add diagram of strafing wheels with their respective direction Thus, the direction of each wheel just becomes whatever direction the joystick is facing. It's so simple! Unfortunately, it's not that simple. This only works in robot-centric mode, where \"left\" and \"right\" directions are considered from the perspective of the robot. However, with swerve, you often are facing a different direction than the robot and so this becomes an uneccessary hussle. Add diagram of the bot strafing left facing in two different directions (robot-centric) The alternative is to use field-centric driving, which makes it so that \"your left\" is always the \"bot's left\", no matter which direction the robot is facing. To adjust for this, we need to get the angle from our gyroscope and adjust the strafing direction. Add diagram of the bot strafing left facing in two different directions (field-centric) Since we are keeping the vectors in component form, we need to think about this more carefully. Our joystick inputs give us inputs in the X and Y direction, and so we have 3 $$ Let ${J_{x}}$ be the magnitude of the X-direction of the left joystick. Let ${J_{y}}$ be the magnitude of the Y-direction of the left joystick. Let ${G}$ be the relative angle we are currently at. $$","title":"The strafing vector"},{"location":"README/","text":"Swerve-Documentation \u201cCreative activity is one of the few self-rewarding activities. Being creative is like being in love!\u201d -- Woodie Flowers First Robotics is a place where creativity, passion, and nerdiness all intercept. All of us at Team 5417 have first-hand experience of the wonderful community that First Robotics provides, and a key part of the memories we\u2019ve made is our robot. A team\u2019s robot is typically what first comes to mind when mentioned. It\u2019s more than just the competitor; It\u2019s a physical symbol of the time, effort, and determination that each individual team member has put in; It\u2019s a large part of what makes an FRC team an FRC team. It\u2019s for this reason that we decided it was necessary to make a swerve bot, specifically our swerve bot, Vira.","title":"Read Me"},{"location":"README/#swerve-documentation","text":"\u201cCreative activity is one of the few self-rewarding activities. Being creative is like being in love!\u201d -- Woodie Flowers First Robotics is a place where creativity, passion, and nerdiness all intercept. All of us at Team 5417 have first-hand experience of the wonderful community that First Robotics provides, and a key part of the memories we\u2019ve made is our robot. A team\u2019s robot is typically what first comes to mind when mentioned. It\u2019s more than just the competitor; It\u2019s a physical symbol of the time, effort, and determination that each individual team member has put in; It\u2019s a large part of what makes an FRC team an FRC team. It\u2019s for this reason that we decided it was necessary to make a swerve bot, specifically our swerve bot, Vira.","title":"Swerve-Documentation"},{"location":"Strategy/Applications/","text":"Applications for Swerve Swerve when paired with a proper arm and manipulator can be a great offensive robot, but can function on its own (just the drivetrain) as a defensive bot. What does offensive and defensive mean? Offensive means that the robot is primarily focused on scoring as many game elements as possible. Defensive robots, on the other hand, are focused on preventing the opposing alliance from scoring game elements.","title":"Applications"},{"location":"Strategy/Applications/#applications-for-swerve","text":"Swerve when paired with a proper arm and manipulator can be a great offensive robot, but can function on its own (just the drivetrain) as a defensive bot. What does offensive and defensive mean? Offensive means that the robot is primarily focused on scoring as many game elements as possible. Defensive robots, on the other hand, are focused on preventing the opposing alliance from scoring game elements.","title":"Applications for Swerve"},{"location":"Strategy/Basics/","text":"Strategy Basics Before delving into particular drive strategy, it is crucial to understand the pros and cons of swerve drive. Info Pros Cons * Far faster than other drivetrain options (we run at ~3.8 m/s) * Tighter manuverability and control - Smaller turn radius and strafing allows for less congestion in small spaces and faster cycle times. * In certain wheel and motor arangements, the robot can shrug off heavy hits without moving or taking substantial damage. * Manuverabity enhances the ability to dodge incoming, defensive robots with ease. * Increased flexibility and options for autonomous mode. * Intesive power consumption and battery sagging. * Eight motors for drivetrain alone increase points of failure exponentially. - Increased wiring complexity * Less stable (higher center of gravity) * Difficult to control (driving aspect) * Expensive - Must always keep spare parts and modules in case of damage during competition. - Difficult to repair","title":"Basics"},{"location":"Strategy/Basics/#strategy-basics","text":"Before delving into particular drive strategy, it is crucial to understand the pros and cons of swerve drive. Info Pros Cons * Far faster than other drivetrain options (we run at ~3.8 m/s) * Tighter manuverability and control - Smaller turn radius and strafing allows for less congestion in small spaces and faster cycle times. * In certain wheel and motor arangements, the robot can shrug off heavy hits without moving or taking substantial damage. * Manuverabity enhances the ability to dodge incoming, defensive robots with ease. * Increased flexibility and options for autonomous mode. * Intesive power consumption and battery sagging. * Eight motors for drivetrain alone increase points of failure exponentially. - Increased wiring complexity * Less stable (higher center of gravity) * Difficult to control (driving aspect) * Expensive - Must always keep spare parts and modules in case of damage during competition. - Difficult to repair","title":"Strategy Basics"}]}